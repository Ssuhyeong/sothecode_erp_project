[{"/home/song/serp_front/src/index.js":"1","/home/song/serp_front/src/App.js":"2","/home/song/serp_front/src/routes.js":"3","/home/song/serp_front/src/layouts/DashboardLayout/index.js":"4","/home/song/serp_front/src/layouts/DashboardLayout/TopBar/index.js":"5","/home/song/serp_front/src/layouts/DashboardLayout/FooterBar/index.js":"6","/home/song/serp_front/src/components/RouterGuard.js":"7","/home/song/serp_front/src/views/home/index.js":"8","/home/song/serp_front/src/utils/axios.js":"9","/home/song/serp_front/src/utils/axios_api.js":"10","/home/song/serp_front/src/components/LoginGuard.js":"11","/home/song/serp_front/src/views/signIn/index.js":"12","/home/song/serp_front/src/layouts/DashboardLayout/NavBar/index.js":"13","/home/song/serp_front/src/layouts/DashboardLayout/NavBar/UserInfoCard.js":"14","/home/song/serp_front/src/views/menu/index.js":"15","/home/song/serp_front/src/views/errors/NotFoundView/index.js":"16"},{"size":260,"mtime":1660266205687,"results":"17","hashOfConfig":"18"},{"size":1184,"mtime":1660297921074,"results":"19","hashOfConfig":"18"},{"size":1714,"mtime":1660297927694,"results":"20","hashOfConfig":"18"},{"size":950,"mtime":1660266403559,"results":"21","hashOfConfig":"18"},{"size":138,"mtime":1659425553075,"results":"22","hashOfConfig":"18"},{"size":1087,"mtime":1660264175578,"results":"23","hashOfConfig":"18"},{"size":1307,"mtime":1660119685811,"results":"24","hashOfConfig":"18"},{"size":358,"mtime":1660112445440,"results":"25","hashOfConfig":"18"},{"size":443,"mtime":1660111369568,"results":"26","hashOfConfig":"18"},{"size":2158,"mtime":1660119662657,"results":"27","hashOfConfig":"18"},{"size":1223,"mtime":1660117418296,"results":"28","hashOfConfig":"18"},{"size":3762,"mtime":1660110533953,"results":"29","hashOfConfig":"18"},{"size":2789,"mtime":1660298688172,"results":"30","hashOfConfig":"18"},{"size":2675,"mtime":1660207930227,"results":"31","hashOfConfig":"18"},{"size":208,"mtime":1660298725057,"results":"32","hashOfConfig":"18"},{"size":138,"mtime":1659398849503,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1s781b7",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"57"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"57"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/song/serp_front/src/index.js",[],[],"/home/song/serp_front/src/App.js",[],[],"/home/song/serp_front/src/routes.js",[],[],"/home/song/serp_front/src/layouts/DashboardLayout/index.js",["88"],[],"/home/song/serp_front/src/layouts/DashboardLayout/TopBar/index.js",[],[],[],"/home/song/serp_front/src/layouts/DashboardLayout/FooterBar/index.js",["89","90","91","92","93","94"],[],"/home/song/serp_front/src/components/RouterGuard.js",["95","96"],[],"import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useNavigate } from \"react-router-dom\";\n\nimport api from 'src/utils/axios_api'\n\n// 로그인 페이지(로그인 세션O) -> 대시보드\nconst RouterGuard = ({ children }) => {\n    const [loading, setLoading] = useState(true);\n    const navigate = useNavigate();\n    let isPost = false;\n\n    useEffect(() => {\n        if (isPost)\n            return;\n        isPost = true;\n\n        const user = localStorage.getItem('user');\n\n        if (!user) {\n            setLoading(false)\n            return;\n        }\n\n        api.post('/refresh')\n            .then((res) => {\n                // 토큰 o\n                if (res.status == 201) { // 엑세스만 재발행\n                    localStorage.removeItem('user')\n                    localStorage.setItem('user', JSON.stringify(res.data, ['accessToken', 'refreshToken']))\n                }\n                navigate(\"/\", { replace: true })\n            })\n            .catch((err) => {\n                // 토큰 x\n                setLoading(false)\n            })\n    }, [])\n\n    if (loading)\n        return (<>Loading</>);\n\n    return (\n        <> {children}   </>\n    );\n};\n\nRouterGuard.propTypes = {\n    children: PropTypes.node\n};\n\nexport default RouterGuard;\n",[],"/home/song/serp_front/src/views/home/index.js",[],[],"/home/song/serp_front/src/utils/axios.js",[],[],"/home/song/serp_front/src/utils/axios_api.js",["97","98"],[],"import axios from 'axios';\nimport { useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\n\nconst client = axios.create(\n  {\n    baseURL : 'http://127.0.0.1:3001',\n    timeout: 1000,\n  }\n);\n\nclient.interceptors.request.use(\n  function (config) {\n    const user = localStorage.getItem('user');\n    if (!user) {\n      config.headers[\"Authorization\"] = null;\n      config.headers[\"refreshToken\"] = null;\n      return config\n    }\n    const { accessToken, refreshToken } = JSON.parse(user)\n    config.headers[\"Authorization\"] = `Bearer ${accessToken}`;\n    config.headers[\"refreshToken\"] = refreshToken;\n    return config\n  }\n)\n\n\nconst Interceptor = ({children}) => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    client.interceptors.response.use(\n      function (response) {\n        return response\n      },\n      async function (error) {\n        if (error.response && error.response.status === 401) {\n          try {\n            //  엑세스 토큰 만료\n            const originalRequest = error.config;\n            const data = await client.post('/refresh')\n    \n            if (data.status == 201) { // 엑세스만 재발행\n              const { accessToken, refreshToken } = data.data.data\n              localStorage.removeItem('user')\n              localStorage.setItem('user', JSON.stringify(data.data.data, ['accessToken', 'refreshToken']))\n              originalRequest.headers['Authorization'] = `Bearer ${accessToken}`;\n              originalRequest.headers['refreshToken'] = refreshToken;\n              return await client.request(originalRequest); // 재설정 및 원래 리퀘스트 \n            }\n          } catch (error) {\n            // [/refresh] 토큰 만료 또는 토큰 비정상 또는 헤더 없음\n            localStorage.removeItem('user');\n            navigate(\"/login\", { replace: true })\n            return;\n           // return Promise.reject(error)\n          }\n        }\n        //  [/api (jwt_verify)]에서 오는 에러 코드  or 기존 요청 에러 코드\n        return Promise.reject(error) \n      }\n    )\n  }, [])\n  return children;\n}\n\n\nexport default client;\nexport {Interceptor};","/home/song/serp_front/src/components/LoginGuard.js",["99","100"],[],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport api from 'src/utils/axios_api'\r\n\r\n// 각종페이지(로그인 세션X) -> 로그인페이지\r\nconst LoginGuard = ({ children }) => {\r\n    const [loading, setLoading] = useState(true);\r\n    const navigate = useNavigate();\r\n    let isPost = false;\r\n\r\n    useEffect(() => {\r\n        if (isPost)\r\n            return;\r\n        isPost = true;\r\n\r\n        api.post('/refresh')\r\n            .then((res) => {\r\n                // 토큰 o\r\n                if (res.status == 201) { \r\n                    localStorage.removeItem('user')\r\n                    localStorage.setItem('user', JSON.stringify(res.data, ['accessToken', 'refreshToken']))\r\n                }\r\n                setLoading(false)\r\n\r\n            })\r\n            .catch((err) => {\r\n                // 토큰 x\r\n                navigate(\"/login\", { replace: true })\r\n            })\r\n    }, [])\r\n\r\n    if (loading)\r\n        return (<>Loading</>);\r\n\r\n\r\n    return (\r\n        <>\r\n            {children}\r\n        </>\r\n    );\r\n};\r\n\r\nLoginGuard.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default LoginGuard;\r\n","/home/song/serp_front/src/views/signIn/index.js",["101","102","103","104"],[],"import * as React from \"react\";\nimport { useState } from \"react\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { FormHelperText, Card , Button, CssBaseline, TextField, Box, Typography, Container} from \"@mui/material\";\nimport \"./index.css\";\nimport axios from '../../utils/axios';\n\nimport { useNavigate } from 'react-router-dom';\n\nconst theme = createTheme();\n\n\n\nconst SignIn = () => {\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordState] = useState(\"\");\n  const navigate = useNavigate();\n\n  const onhandlePost = async (data) => {\n    \n    await axios.post('/account/signIn', {\n      email: 'tlqkffus1', \n      password: '123'\n    })\n    .then((res) => {\n       localStorage.setItem('user', JSON.stringify(res.data.data, ['accessToken', 'refreshToken']))\n       navigate(`/home`);\n    })\n    .catch((err)=>{\n      console.log(err)  \n    })\n\n\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const loginData = {\n      userEmail: data.get(\"email\"),\n      userPassword: data.get(\"password\"),\n    };\n    const { userEmail, userPassword } = loginData;\n    onhandlePost(loginData);\n    // const emailRegex =\n    //   /([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n    // if (!emailRegex.test(userEmail))\n    //   setEmailError(\"올바른 이메일 형식이 아닙니다.\");\n    // else setEmailError(\"\");\n\n    // const passwordRegex =\n    //   /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,25}$/;\n    // if (!passwordRegex.test(userPassword))\n    //   setPasswordState(\"숫자+영문자+특수문자 8자리\");\n    // else setPasswordState(\"\");\n\n    // if (emailRegex.test(userEmail) && passwordRegex.test(userPassword)) {\n    //   onhandlePost(loginData);\n    // }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Card className=\"Card_style\" elevation={5}>\n          <Box\n            sx={{\n              marginTop: 8,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <Typography component=\"h1\" variant=\"h5\">\n              SOTHECODE ERP \n            </Typography>\n            <Box\n              component=\"form\"\n              onSubmit={handleSubmit}\n              noValidate\n              sx={{ mt: 1 }}\n            >\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n                error={emailError !== \"\" || false}\n              />\n              <FormHelperText className=\"error_message\">\n                {emailError}\n              </FormHelperText>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                error={passwordError !== \"\" || false}\n              />\n              <FormHelperText className=\"error_message\">\n                {passwordError}\n              </FormHelperText>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Sign In\n              </Button>\n            </Box>\n          </Box>\n        </Card>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default SignIn;\n","/home/song/serp_front/src/layouts/DashboardLayout/NavBar/index.js",["105"],[],"/home/song/serp_front/src/layouts/DashboardLayout/NavBar/UserInfoCard.js",[],[],"/home/song/serp_front/src/views/menu/index.js",[],[],"/home/song/serp_front/src/views/errors/NotFoundView/index.js",[],[],{"ruleId":"106","severity":1,"message":"107","line":5,"column":8,"nodeType":"108","messageId":"109","endLine":5,"endColumn":17},{"ruleId":"106","severity":1,"message":"110","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":15},{"ruleId":"111","severity":1,"message":"112","line":31,"column":7,"nodeType":"113","messageId":"114","endLine":31,"endColumn":21},{"ruleId":"111","severity":1,"message":"115","line":34,"column":7,"nodeType":"113","messageId":"114","endLine":34,"endColumn":24},{"ruleId":"111","severity":1,"message":"116","line":35,"column":9,"nodeType":"113","messageId":"114","endLine":35,"endColumn":22},{"ruleId":"111","severity":1,"message":"116","line":36,"column":9,"nodeType":"113","messageId":"114","endLine":36,"endColumn":22},{"ruleId":"111","severity":1,"message":"116","line":37,"column":9,"nodeType":"113","messageId":"114","endLine":37,"endColumn":22},{"ruleId":"117","severity":1,"message":"118","line":16,"column":18,"nodeType":"119","endLine":16,"endColumn":22},{"ruleId":"120","severity":1,"message":"121","line":28,"column":32,"nodeType":"122","messageId":"123","endLine":28,"endColumn":34},{"ruleId":"120","severity":1,"message":"121","line":43,"column":29,"nodeType":"122","messageId":"123","endLine":43,"endColumn":31},{"ruleId":"117","severity":1,"message":"124","line":63,"column":6,"nodeType":"125","endLine":63,"endColumn":8,"suggestions":"126"},{"ruleId":"117","severity":1,"message":"118","line":17,"column":18,"nodeType":"119","endLine":17,"endColumn":22},{"ruleId":"120","severity":1,"message":"121","line":22,"column":32,"nodeType":"122","messageId":"123","endLine":22,"endColumn":34},{"ruleId":"106","severity":1,"message":"127","line":15,"column":22,"nodeType":"108","messageId":"109","endLine":15,"endColumn":35},{"ruleId":"106","severity":1,"message":"128","line":16,"column":25,"nodeType":"108","messageId":"109","endLine":16,"endColumn":41},{"ruleId":"106","severity":1,"message":"129","line":43,"column":13,"nodeType":"108","messageId":"109","endLine":43,"endColumn":22},{"ruleId":"106","severity":1,"message":"130","line":43,"column":24,"nodeType":"108","messageId":"109","endLine":43,"endColumn":36},{"ruleId":"131","severity":1,"message":"132","line":62,"column":13,"nodeType":"113","endLine":62,"endColumn":93},"no-unused-vars","'FooterBar' is defined but never used.","Identifier","unusedVar","'Divider' is defined but never used.","react/jsx-pascal-case","Imported JSX component Footer_image must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Footer_descript must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Footer_ment must be in PascalCase or SCREAMING_SNAKE_CASE","react-hooks/exhaustive-deps","Assignments to the 'isPost' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["133"],"'setEmailError' is assigned a value but never used.","'setPasswordState' is assigned a value but never used.","'userEmail' is assigned a value but never used.","'userPassword' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"desc":"134","fix":"135"},"Update the dependencies array to be: [navigate]",{"range":"136","text":"137"},[1973,1975],"[navigate]"]