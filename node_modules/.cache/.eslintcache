[{"/home/song/serp_front/src/index.js":"1","/home/song/serp_front/src/App.js":"2","/home/song/serp_front/src/routes.js":"3","/home/song/serp_front/src/layouts/DashboardLayout/index.js":"4","/home/song/serp_front/src/layouts/DashboardLayout/TopBar/index.js":"5","/home/song/serp_front/src/layouts/DashboardLayout/FooterBar/index.js":"6","/home/song/serp_front/src/components/RouterGuard.js":"7","/home/song/serp_front/src/utils/axios.js":"8","/home/song/serp_front/src/components/LoginGuard.js":"9","/home/song/serp_front/src/views/signIn/index.js":"10","/home/song/serp_front/src/layouts/DashboardLayout/NavBar/index.js":"11","/home/song/serp_front/src/layouts/DashboardLayout/NavBar/UserInfoCard.js":"12","/home/song/serp_front/src/views/menu/index.js":"13","/home/song/serp_front/src/views/errors/NotFoundView/index.js":"14","/home/song/serp_front/src/views/menu/InvntMngView/index.js":"15","/home/song/serp_front/src/views/menu/PurchaseMngView/index.js":"16","/home/song/serp_front/src/views/menu/SalesMngView/index.js":"17","/home/song/serp_front/src/views/menu/CompanyInfoView/index.js":"18","/home/song/serp_front/src/components/Tabs/index.js":"19","/home/song/serp_front/src/components/TapPanel/index.js":"20","/home/song/serp_front/src/components/Header/index.js":"21","/home/song/serp_front/src/components/Paper/index.js":"22","/home/song/serp_front/src/components/CompanyInfo/CompanyDetails/index.js":"23","/home/song/serp_front/src/components/CompanyInfo/CompanyDetails/InfoTitle.js":"24","/home/song/serp_front/src/components/CompanyInfo/CompanyDetails/InfoContent.js":"25","/home/song/serp_front/src/components/CompanyInfo/CompanyDetails/InfoMemo.js":"26","/home/song/serp_front/src/components/CompanyInfo/CompanyTable/index.js":"27","/home/song/serp_front/src/components/SearchField/index.js":"28"},{"size":260,"mtime":1660266205687,"results":"29","hashOfConfig":"30"},{"size":1180,"mtime":1660727381127,"results":"31","hashOfConfig":"30"},{"size":2195,"mtime":1660736727553,"results":"32","hashOfConfig":"30"},{"size":990,"mtime":1660894903712,"results":"33","hashOfConfig":"30"},{"size":138,"mtime":1659425553075,"results":"34","hashOfConfig":"30"},{"size":1042,"mtime":1660615226649,"results":"35","hashOfConfig":"30"},{"size":1012,"mtime":1660781285845,"results":"36","hashOfConfig":"30"},{"size":1369,"mtime":1660781844810,"results":"37","hashOfConfig":"30"},{"size":877,"mtime":1660781290705,"results":"38","hashOfConfig":"30"},{"size":3218,"mtime":1660735901259,"results":"39","hashOfConfig":"30"},{"size":3312,"mtime":1660736861838,"results":"40","hashOfConfig":"30"},{"size":2781,"mtime":1660730490051,"results":"41","hashOfConfig":"30"},{"size":217,"mtime":1660610000784,"results":"42","hashOfConfig":"30"},{"size":138,"mtime":1659398849503,"results":"43","hashOfConfig":"30"},{"size":618,"mtime":1660627781031,"results":"44","hashOfConfig":"30"},{"size":556,"mtime":1660627757301,"results":"45","hashOfConfig":"30"},{"size":289,"mtime":1660617933100,"results":"46","hashOfConfig":"30"},{"size":1697,"mtime":1660899227306,"results":"47","hashOfConfig":"30"},{"size":1139,"mtime":1660710065569,"results":"48","hashOfConfig":"30"},{"size":470,"mtime":1660617878927,"results":"49","hashOfConfig":"30"},{"size":197,"mtime":1660617338676,"results":"50","hashOfConfig":"30"},{"size":423,"mtime":1660812397484,"results":"51","hashOfConfig":"30"},{"size":1093,"mtime":1660900602161,"results":"52","hashOfConfig":"30"},{"size":1270,"mtime":1660900221831,"results":"53","hashOfConfig":"30"},{"size":1203,"mtime":1660893271291,"results":"54","hashOfConfig":"30"},{"size":3827,"mtime":1660892987499,"results":"55","hashOfConfig":"30"},{"size":2565,"mtime":1660899317777,"results":"56","hashOfConfig":"30"},{"size":2939,"mtime":1660898876115,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"1s781b7",{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"61"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"61"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"61"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"61"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"61"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},"/home/song/serp_front/src/index.js",[],[],[],"/home/song/serp_front/src/App.js",[],[],"/home/song/serp_front/src/routes.js",[],[],"/home/song/serp_front/src/layouts/DashboardLayout/index.js",[],[],"/home/song/serp_front/src/layouts/DashboardLayout/TopBar/index.js",[],[],[],"/home/song/serp_front/src/layouts/DashboardLayout/FooterBar/index.js",["152","153","154","155","156"],[],"/home/song/serp_front/src/components/RouterGuard.js",["157"],[],"import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useNavigate } from \"react-router-dom\";\n\nimport axios from 'src/utils/axios'\n\n// 로그인 페이지(로그인 세션O) 들어갈때\nconst RouterGuard = ({ children }) => {\n    const [loading, setLoading] = useState(true);\n    const navigate = useNavigate();\n    let isPost = false;\n\n    useEffect(() => {\n        if (isPost)\n            return;\n        isPost = true;\n        console.log(axios.defaults.headers.common['Authorization']);\n        axios.post('/jwt')\n            .then((res) => { // 토큰 o -> main page\n                navigate(\"/\", { replace: true })\n            })\n            .catch((err) => { // 토큰x -> login page\n                // 토큰 x\n                setLoading(false)\n            })\n\n    }, [])\n\n    if (loading)\n        return (<>Loading</>);\n\n    return (\n        <> {children}   </>\n    );\n};\n\nRouterGuard.propTypes = {\n    children: PropTypes.node\n};\n\nexport default RouterGuard;\n","/home/song/serp_front/src/utils/axios.js",["158"],[],"import axios from 'axios';\nimport { useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\n\nconst client = axios.create(\n  {\n    baseURL : 'http://localhost:3001',\n    timeout: 1000,\n  }\n);\n// 200 : 성공, 201 : 토큰 재발행, 400 : 인증 X(여러가지 이유),\nclient.interceptors.request.use(\n  function (config) {\n    const authorization = localStorage.getItem('Authorization');\n    if (!authorization) {\n      config.headers[\"Authorization\"] = null;\n      return config\n    }\n    config.headers[\"Authorization\"] = authorization;\n    return config\n  }\n)\n\n// 응답\nconst Interceptor = ({children}) => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Authorization 헤더가 비어있다면 갱신 안해도되는 거임\n    client.interceptors.response.use(\n      function (response) {\n        \n        if(response.headers.authorization) {\n          localStorage.setItem('Authorization', response.headers.authorization);\n        }\n        return response\n      },\n      function (error) {\n        // 백엔드에서 jwt(검증+갱신) 후 토큰 만료(액세스+리프레쉬)\n        if (error.response && error.response.status === 400) \n            navigate(\"/login\", { replace: true })\n        \n        return Promise.reject(error) \n      }\n    )\n  }, [])\n  return children;\n}\n\n\nexport default client;\nexport {Interceptor};","/home/song/serp_front/src/components/LoginGuard.js",["159","160"],[],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport axios from 'src/utils/axios'\r\n\r\n// 각종페이지(로그인 세션X) 들어갈때\r\nconst LoginGuard = ({ children }) => {\r\n    const [loading, setLoading] = useState(true);\r\n    // const navigate = useNavigate();\r\n     let isPost = false;\r\n\r\n    useEffect(() => {\r\n         if (isPost)\r\n             return;\r\n         isPost = true;\r\n        axios.post('/jwt')\r\n            .then((res) => { // 토큰 o -> ... page\r\n                setLoading(false)\r\n            }) // 토큰x -> axios에서 처리\r\n    }, [])\r\n\r\n    if (loading)\r\n        return <></>;\r\n\r\n\r\n    return (\r\n        <>\r\n            {children}\r\n        </>\r\n    );\r\n};\r\n\r\nLoginGuard.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default LoginGuard;\r\n","/home/song/serp_front/src/views/signIn/index.js",["161"],[],"import * as React from \"react\";\nimport { useState } from \"react\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport {\n  FormHelperText,\n  Button,\n  CssBaseline,\n  TextField,\n  Box,\n  Container,\n  Alert,\n  Snackbar,\n} from \"@mui/material\";\nimport axios from \"../../utils/axios\";\n\nimport { useNavigate } from \"react-router-dom\";\n\nconst theme = createTheme();\n\nconst SignIn = () => {\n  const [emailError, setEmailError] = useState(\"\");\n  const [loginError, setloginError] = useState(false);\n  const navigate = useNavigate();\n\n  const onhandlePost = async (email) => {\n\n    console.log('onhandlePost');\n    await axios.post(\"/account/signIn\", {email: email })\n      .then((res) => {\n        localStorage.setItem('Authorization', res.headers.authorization);\n        navigate('/memu');\n      })\n      .catch(() => {\n        setloginError(true);\n      });\n  };\n\n  const handleSubmit = (event) => {\n     event.preventDefault();\n    // const email = new FormData(event.currentTarget);\n    // const emailRegex =\n    //   /([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n    // if (!emailRegex.test(email))\n    //   setEmailError(\"올바른 이메일 형식이 아닙니다.\");\n    // else setEmailError(\"\");\n\n    // if (emailRegex.test(email)) {\n    //   onhandlePost(email);\n    // }.\n    onhandlePost('levin.song@sothecode.com');\n  };\n\n  const handleClose = (reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setloginError(false);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Snackbar\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        open={loginError}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"error\" sx={{ width: \"100%\" }}>\n          사용자등록이 되어있지 않습니다. 관리자에게 문의해주세요.\n        </Alert>\n      </Snackbar>\n      <Container component=\"main\" maxWidth=\"xm\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 40,\n            marginBottom: 50,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            noValidate\n            sx={{ mt: 1, width: 500 }}\n          >\n            <h1>Login</h1>\n            <TextField\n              className=\"login_email\"\n              margin=\"normal\"\n              fullWidth\n              required\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              error={emailError !== \"\" || false}\n            />\n            <FormHelperText style={{ color: \"#D32F2F\" }}>\n              {emailError}\n            </FormHelperText>\n            <Button\n              fullWidth\n              type=\"submit\"\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2, height: 50, background: \"#3855B3\" }}\n            >\n              Login\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default SignIn;","/home/song/serp_front/src/layouts/DashboardLayout/NavBar/index.js",["162"],[],"import React from 'react';\nimport { Drawer, Box, List, ListItemIcon, ListItemButton, ListItemText } from '@mui/material'\nimport Divider from '@mui/material/Divider';\nimport UserInfoCard from './UserInfoCard';\n\nimport CompanyInfoIcon from '@mui/icons-material/StoreOutlined';\nimport PurchaseMngIcon from '@mui/icons-material/LocalMallOutlined';\nimport InvntMngIcon from '@mui/icons-material/InboxOutlined';\nimport SalesMngIcon from '@mui/icons-material/ReceiptLongOutlined';\n\nimport { useNavigate } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nconst items = [\n  {\n    title: '업체정보',\n    href: 'companyinfo',\n    icon: <CompanyInfoIcon />\n  },\n  {\n    title: '구매관리',\n    href: 'purchasemng',\n    icon: <PurchaseMngIcon />\n  },\n  {\n    title: '재고관리',\n    href: 'invntmng',\n    icon: <InvntMngIcon />\n  },\n  {\n    title: '영업관리',\n    href: 'salesmng',\n    icon: <SalesMngIcon />\n  },\n]\n\nconst NavBar = (props) => {\n  const locationHook = useLocation();\n  const splitUrl = locationHook?.pathname?.split('/') ?? null;\n  const location = splitUrl?.length > 1 ? splitUrl[splitUrl.length - 1] : null;\n  const navigate = useNavigate();\n\n  const handleListItemClick = (value) => {\n    navigate(`/memu/${value}`);\n  };\n\n  const handleLogOutClick = () => {\n    localStorage.removeItem('Authorization')\n    navigate('/login');\n  }\n  const handleLogoClick = () => {\n    navigate('/memu');\n  }\n\n  return (\n    <Box>\n      <Drawer\n        sx={{\n          width: 250, flexShrink: 0,\n          '& .MuiDrawer-paper': {\n            width: 250,\n            boxSizing: 'content-box',\n            border: 0,\n          },\n        }}\n        variant=\"permanent\"\n        anchor=\"left\">\n\n        <List>\n          <Box sx={{ pl: 20, py: 22, pr: 88.88 }}>\n            <img src={process.env.PUBLIC_URL + '/nav_logo.png'} style={{ width: \"100%\" }} onClick={handleLogoClick}/>\n          </Box>\n          <Divider />\n          {/* 유저 정보 */}\n          <UserInfoCard user={{email : 'levin.song@sothecode.com', department : '개발팀'}} handleLogOutClick={handleLogOutClick}/>\n          {/* 아이템  */}\n          {\n            items.map((value, i ) => {\n              const selected = location === value.href;\n              \n              return (\n                <ListItemButton \n                onClick={()=>{handleListItemClick(value.href)}}\n                key={i} \n                sx={{\n                   mx: 20, \n                   fontSize: '50px',\n                   fontWeight: 'bold',\n                   '&:hover': { borderRadius : '4px', backgroundColor: 'rgba(56, 85, 179, 0.08)'},\n                  }}\n                  selected={selected}>\n                  <ListItemIcon sx={{ \n                    minWidth : 16,\n                    pr : 15,\n                    color : selected && 'primary.main',\n                    fontSize: '16px'}}>\n                    {value.icon}\n                  </ListItemIcon>\n                  <ListItemText\n                    primaryTypographyProps={{ fontWeight: 'bold', fontSize: '14px', color : selected && 'primary.main'}}\n                    primary={value.title} />\n  \n                </ListItemButton>\n              )\n            })\n          }\n\n        </List>\n\n      </Drawer>\n    </Box>\n\n  );\n};\n\nexport default NavBar;\n","/home/song/serp_front/src/layouts/DashboardLayout/NavBar/UserInfoCard.js",[],[],"/home/song/serp_front/src/views/menu/index.js",[],[],"/home/song/serp_front/src/views/errors/NotFoundView/index.js",[],[],"/home/song/serp_front/src/views/menu/InvntMngView/index.js",[],[],"/home/song/serp_front/src/views/menu/PurchaseMngView/index.js",[],[],"/home/song/serp_front/src/views/menu/SalesMngView/index.js",[],[],"/home/song/serp_front/src/views/menu/CompanyInfoView/index.js",["163"],[],"import React from 'react';\r\nimport { Box, Typography } from '@mui/material';\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport Header from 'src/components/Header';\r\nimport SearchField from 'src/components/SearchField'\r\nimport CompanyTable from 'src/components/CompanyInfo/CompanyTable';\r\nimport CompanyDetails from 'src/components/CompanyInfo/CompanyDetails';\r\n\r\nimport axios from \"../../../utils/axios\";\r\nimport { useQuery } from 'react-query';\r\n\r\nconst CompanyInfoView = () => {\r\n  const [companyIdx, setCompanyIdx] = useState(-1);\r\n  const [viewData, setViewData] = useState([]);\r\n\r\n  const query = useQuery(['companys'], async () => {\r\n    const { data } = await axios.post('/companys/info', { company_type: '발주처' });\r\n    return data.data\r\n  });\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        업체정보\r\n      </Header>\r\n\r\n      {\r\n        query.isLoading ? (<div> Loading </div>) :\r\n          (\r\n            <Box sx={{ height: \"100%\" }}>\r\n              <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <SearchField placeholder='업체명, 연락처 등 검색' companys={query.data} setViewData={setViewData}/>\r\n              </Box>\r\n\r\n              <Typography\r\n                sx={{ fontWeight: 600, fontSize: \"12px\", mt: \"19px\", mb: \"10px\" }} >\r\n                총 업체({query.data.length})\r\n              </Typography>\r\n              <Box sx={{ display: \"flex\", height: '100%' }} >\r\n                <CompanyTable companys={viewData} setCompanyIdx={setCompanyIdx} />\r\n                <CompanyDetails companyIdx={companyIdx} />\r\n              </Box>\r\n            </Box>\r\n          )\r\n      }\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default CompanyInfoView;\r\n","/home/song/serp_front/src/components/Tabs/index.js",[],[],"/home/song/serp_front/src/components/TapPanel/index.js",[],[],"/home/song/serp_front/src/components/Header/index.js",[],[],"/home/song/serp_front/src/components/Paper/index.js",[],[],"/home/song/serp_front/src/components/CompanyInfo/CompanyDetails/index.js",["164","165","166","167"],[],"/home/song/serp_front/src/components/CompanyInfo/CompanyDetails/InfoTitle.js",[],[],"/home/song/serp_front/src/components/CompanyInfo/CompanyDetails/InfoContent.js",[],[],"/home/song/serp_front/src/components/CompanyInfo/CompanyDetails/InfoMemo.js",[],[],"/home/song/serp_front/src/components/CompanyInfo/CompanyTable/index.js",["168","169"],[],"import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { Typography, Box, Avatar } from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport Paper from \"../../Paper\";\n\nconst CompanyListTable = (props) => {\n  const {companys, setCompanyIdx} = props;\n  return (\n    companys.length == 0 ? (\n    <Paper sx={{\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      fontWeight: 400,\n      fontSize: \"15px\",\n      color: \"#919294\",\n      height : '100%'\n    }}>\n      등록된 업체가 업습니다.\n    </Paper>\n    ) : (\n\n\n    <Paper\n      sx={{\n        mr: \"10px\",\n        \"&::-webkit-scrollbar\": {\n          width: 0,\n        },\n      }}\n    >\n      <Table>\n        <TableBody>\n          {companys.map((row, i) => (\n            <TableRow key={i}>\n              <TableCell scope=\"row\" sx={{\n                cursor: \"pointer\",\n                \"&:hover\": {\n                  backgroundColor: \"basis.dark\",\n                },\n              }}\n              onClick={()=>{setCompanyIdx(row.idx)}}\n              >\n                <Box sx={{ display: \"flex\" }}>\n\n                  <Box>\n                    <Avatar variant=\"rounded\" sx={{ mr: \"10px\" }} />\n                  </Box>\n\n                  <Box sx={{ flexGrow: 1 }}>\n                    <Typography\n                      sx={{\n                        fontWeight: 600,\n                        fontSize: \"13px\",\n                        color: \"#3855B3\",\n                        mb: 0.5,\n                      }}\n                    >\n                      {row.company_name}\n                    </Typography>\n                    <Typography\n                      sx={{\n                        fontWeight: 500,\n                        fontSize: \"12px\",\n                        color: \"rgba(24, 24, 25, 0.42)\",\n                      }}\n                    >\n                      등록일 {row.createdAt}\n                    </Typography>\n                  </Box>\n\n                  <Box sx={{ display: 'flex', justifyContent: \"center\", alignItems: \"center\", }}>\n                    <EditIcon sx={{ color: \"#919294\" }} />\n                  </Box>\n\n                </Box>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n    )\n  );\n};\n\nexport default CompanyListTable;","/home/song/serp_front/src/components/SearchField/index.js",["170"],[],"import { useState } from \"react\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { Button, FormGroup, TextField, Box } from \"@mui/material\";\nimport CancelRoundedIcon from \"@mui/icons-material/CancelRounded\";\nimport { Autocomplete, createFilterOptions } from \"@mui/material\";\nimport {matchSorter} from 'match-sorter'\n\nconst SearchField = (props) => {\n  const {companys, setViewData} = props; // 원본 전체 데이터\n\n  const [inputValue, setInputValue] = useState('');\n  const tableKeys = ['company_name', 'represent', 'corporate_number', 'description', 'director', 'position', 'email', 'phone_number', 'address']\n  const filterOptions = (options, { inputValue }) =>  matchSorter(options, inputValue, {keys: tableKeys});\n\n  const defaultProps = {\n    options: inputValue !== '' ? companys : [],\n    getOptionLabel: (option) => option.company_name,\n    filterOptions : filterOptions,\n    autoHighlight : true,\n    clearOnBlur : true,\n    freeSolo : true,\n  };\n  \n  return (\n    <Box sx={{ mr: \"10px\" }}>\n      <FormGroup row>\n        <Autocomplete\n          {...defaultProps}\n          sx={{\n            backgroundColor: '#fff',\n            \"& .MuiInputBase-input\": {\n              fontSize: 13,\n              fontWeight: 400,\n              width: 264,\n              height: 0,\n            },\n            \"& .MuiOutlinedInput-root\": {\n              borderTopRightRadius: \"0px\",\n              borderBottomRightRadius: \"0px\",\n              width: 264,\n              height: 37,\n            },\n          }}\n          clearIcon={\n            <CancelRoundedIcon\n              sx={{\n                width: \"15px\",\n                height: \"15px\",\n                color: \"rgba(24, 24, 25, 0.42)\",\n                padding: \"0px\",\n              }}\n            />\n          }\n          onInputChange={(event, newInputValue) => {\n            setInputValue(newInputValue);\n          }}\n          renderInput={(params) =>\n            <TextField {...params} placeholder={props.placeholder}\n              InputProps={{\n                ...params.InputProps,\n                startAdornment: (\n                  <SearchIcon sx={{ width: \"13.5px\", height: \"13.5px\", color: \"rgba(24, 24, 25, 0.42)\" }} />\n                ),\n              }}\n            />}\n        />\n\n        <Button\n          sx={{\n            borderTopLeftRadius: 0,\n            borderBottomLeftRadius: 0,\n            background: \"#FAFAFA\",\n            border: \"1px solid #C4C4C4\",\n            color: \"#97979B\",\n            fontWeight: 600,\n            fontSize: \"13px\",\n            width: \"72px\",\n            height: \"37px\",\n            \"&:hover\": { backgroundColor: \"rgba(56, 85, 179, 0.08)\" },\n          }}\n          onClick={() => { setViewData(matchSorter(companys, inputValue, {keys: tableKeys})) }}\n          variant=\"contained\"\n          disableElevation\n        >\n          검색\n        </Button>\n      </FormGroup>\n    </Box>\n  );\n};\n\n\n\nexport default SearchField;",{"ruleId":"171","severity":1,"message":"172","line":30,"column":7,"nodeType":"173","messageId":"174","endLine":30,"endColumn":21},{"ruleId":"171","severity":1,"message":"175","line":33,"column":7,"nodeType":"173","messageId":"174","endLine":33,"endColumn":24},{"ruleId":"171","severity":1,"message":"176","line":34,"column":9,"nodeType":"173","messageId":"174","endLine":34,"endColumn":22},{"ruleId":"171","severity":1,"message":"176","line":35,"column":9,"nodeType":"173","messageId":"174","endLine":35,"endColumn":22},{"ruleId":"171","severity":1,"message":"176","line":36,"column":9,"nodeType":"173","messageId":"174","endLine":36,"endColumn":22},{"ruleId":"177","severity":1,"message":"178","line":16,"column":18,"nodeType":"179","endLine":16,"endColumn":22},{"ruleId":"177","severity":1,"message":"180","line":46,"column":6,"nodeType":"181","endLine":46,"endColumn":8,"suggestions":"182"},{"ruleId":"183","severity":1,"message":"184","line":4,"column":10,"nodeType":"185","messageId":"186","endLine":4,"endColumn":21},{"ruleId":"177","severity":1,"message":"178","line":17,"column":19,"nodeType":"179","endLine":17,"endColumn":23},{"ruleId":"183","severity":1,"message":"187","line":21,"column":22,"nodeType":"185","messageId":"186","endLine":21,"endColumn":35},{"ruleId":"188","severity":1,"message":"189","line":71,"column":13,"nodeType":"173","endLine":71,"endColumn":118},{"ruleId":"183","severity":1,"message":"190","line":3,"column":10,"nodeType":"185","messageId":"186","endLine":3,"endColumn":19},{"ruleId":"183","severity":1,"message":"191","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":17},{"ruleId":"183","severity":1,"message":"192","line":4,"column":8,"nodeType":"185","messageId":"186","endLine":4,"endColumn":19},{"ruleId":"183","severity":1,"message":"193","line":5,"column":8,"nodeType":"185","messageId":"186","endLine":5,"endColumn":16},{"ruleId":"183","severity":1,"message":"194","line":13,"column":9,"nodeType":"185","messageId":"186","endLine":13,"endColumn":14},{"ruleId":"183","severity":1,"message":"195","line":5,"column":8,"nodeType":"185","messageId":"186","endLine":5,"endColumn":22},{"ruleId":"196","severity":1,"message":"197","line":14,"column":21,"nodeType":"198","messageId":"199","endLine":14,"endColumn":23},{"ruleId":"183","severity":1,"message":"200","line":5,"column":24,"nodeType":"185","messageId":"186","endLine":5,"endColumn":43},"react/jsx-pascal-case","Imported JSX component Footer_image must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Footer_descript must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Footer_ment must be in PascalCase or SCREAMING_SNAKE_CASE","react-hooks/exhaustive-deps","Assignments to the 'isPost' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["201"],"no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar","'setEmailError' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useEffect' is defined but never used.","'InfoTitle' is defined but never used.","'InfoContent' is defined but never used.","'InfoMemo' is defined but never used.","'query' is assigned a value but never used.","'TableContainer' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'createFilterOptions' is defined but never used.",{"desc":"202","fix":"203"},"Update the dependencies array to be: [navigate]",{"range":"204","text":"205"},[1188,1190],"[navigate]"]