{"ast":null,"code":"import api from 'src/utils/axios_api';\n\nconst Guard = () => {\n  const authUser = async () => {\n    try {\n      const data = await api.post('/refresh');\n      console.log(data.status);\n\n      if (data.status == 201) {\n        // 엑세스만 재발행\n        localStorage.removeItem('user');\n        localStorage.setItem('user', JSON.stringify(data.data.data, ['accessToken', 'refreshToken']));\n      }\n    } catch (error) {}\n  };\n\n  authUser();\n};\n\n_c = Guard;\nexport default Guard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Guard\");","map":{"version":3,"names":["api","Guard","authUser","data","post","console","log","status","localStorage","removeItem","setItem","JSON","stringify","error"],"sources":["/home/song/serp_front/src/components/Guard.js"],"sourcesContent":["import api from 'src/utils/axios_api'\r\n\r\nconst Guard = () => {\r\n\r\n    const authUser = async () => {\r\n        try {\r\n            const data = await api.post('/refresh')\r\n            console.log(data.status)\r\n            if (data.status == 201) { // 엑세스만 재발행\r\n                localStorage.removeItem('user')\r\n          localStorage.setItem('user', JSON.stringify(data.data.data, ['accessToken', 'refreshToken']))\r\n            }\r\n\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n    authUser();\r\n\r\n\r\n};\r\n\r\n\r\nexport default Guard;\r\n"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,qBAAhB;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAEhB,MAAMC,QAAQ,GAAG,YAAY;IACzB,IAAI;MACA,MAAMC,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAS,UAAT,CAAnB;MACAC,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,MAAjB;;MACA,IAAIJ,IAAI,CAACI,MAAL,IAAe,GAAnB,EAAwB;QAAE;QACtBC,YAAY,CAACC,UAAb,CAAwB,MAAxB;QACND,YAAY,CAACE,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeT,IAAI,CAACA,IAAL,CAAUA,IAAzB,EAA+B,CAAC,aAAD,EAAgB,cAAhB,CAA/B,CAA7B;MACG;IAEJ,CARD,CAQE,OAAOU,KAAP,EAAc,CACf;EACJ,CAXD;;EAaAX,QAAQ;AAGX,CAlBD;;KAAMD,K;AAqBN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}