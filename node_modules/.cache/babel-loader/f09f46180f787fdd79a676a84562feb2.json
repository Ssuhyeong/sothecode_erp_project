{"ast":null,"code":"var _jsxFileName = \"/home/song/serp_front/src/components/SearchField/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { Button, FormGroup, TextField, Box } from \"@mui/material\";\nimport CancelRoundedIcon from \"@mui/icons-material/CancelRounded\";\nimport { Autocomplete } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchField = () => {\n  _s();\n\n  const [value, setValue] = useState(null);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mr: \"10px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(FormGroup, {\n      row: true,\n      children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n        value: value,\n        sx: {\n          width: \"264px\",\n          \"& .MuiInputBase-input\": {\n            height: \"20px\",\n            fontSize: \"13px\",\n            fontWeight: 400\n          },\n          \"& .MuiOutlinedInput-root\": {\n            borderTopRightRadius: \"0px\",\n            borderBottomRightRadius: \"0px\"\n          }\n        },\n        size: \"small\",\n        onChange: (event, newValue) => {\n          if (typeof newValue === \"string\") {\n            setValue({\n              title: newValue\n            });\n          } else if (newValue && newValue.inputValue) {\n            // Create a new value from the user input\n            setValue({\n              title: newValue.inputValue\n            });\n          } else {\n            setValue(newValue);\n          }\n        },\n        clearIcon: /*#__PURE__*/_jsxDEV(CancelRoundedIcon, {\n          sx: {\n            width: \"15px\",\n            height: \"15px\",\n            color: \"rgba(24, 24, 25, 0.42)\",\n            padding: \"0px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this),\n        selectOnFocus: true,\n        clearOnBlur: true,\n        handleHomeEndKeys: true,\n        options: top100Films,\n        getOptionLabel: option => {\n          if (typeof option === \"string\") {\n            return option;\n          }\n\n          if (option.inputValue) {\n            return option.inputValue;\n          }\n\n          return option.title;\n        },\n        renderOption: (props, option) => /*#__PURE__*/_jsxDEV(\"li\", { ...props,\n          children: option.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 44\n        }, this),\n        freeSolo: true,\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n          sx: {\n            width: 264\n          },\n          InputProps: { ...params.InputProps,\n            startAdornment: /*#__PURE__*/_jsxDEV(SearchIcon, {\n              sx: {\n                width: \"13.5px\",\n                height: \"13.5px\",\n                color: \"rgba(24, 24, 25, 0.42)\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this)\n          },\n          placeholder: \"\\uC5C5\\uCCB4\\uBA85, \\uC5F0\\uB77D\\uCC98 \\uB4F1 \\uAC80\\uC0C9\",\n          InputLabelProps: {\n            shrink: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          borderTopLeftRadius: 0,\n          borderBottomLeftRadius: 0,\n          background: \"#FAFAFA\",\n          border: \"1px solid #C4C4C4\",\n          color: \"#97979B\",\n          fontWeight: 600,\n          fontSize: \"13px\",\n          width: \"72px\",\n          height: \"37px\",\n          \"&:hover\": {\n            backgroundColor: \"rgba(56, 85, 179, 0.08)\"\n          }\n        },\n        variant: \"contained\",\n        disableElevation: true,\n        children: \"\\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchField, \"EEjdpY/CSe7/lDQurV9yi1RbKSs=\");\n\n_c = SearchField;\nconst top100Films = [{\n  title: \"The Shawshank Redemption\",\n  year: 1994\n}, {\n  title: \"The Godfather\",\n  year: 1972\n}, {\n  title: \"The Godfather: Part II\",\n  year: 1974\n}, {\n  title: \"The Dark Knight\",\n  year: 2008\n}, {\n  title: \"12 Angry Men\",\n  year: 1957\n}, {\n  title: \"Schindler's List\",\n  year: 1993\n}];\nexport default SearchField;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchField\");","map":{"version":3,"names":["useState","SearchIcon","Button","FormGroup","TextField","Box","CancelRoundedIcon","Autocomplete","SearchField","value","setValue","mr","width","height","fontSize","fontWeight","borderTopRightRadius","borderBottomRightRadius","event","newValue","title","inputValue","color","padding","top100Films","option","props","params","InputProps","startAdornment","shrink","borderTopLeftRadius","borderBottomLeftRadius","background","border","backgroundColor","year"],"sources":["/home/song/serp_front/src/components/SearchField/index.js"],"sourcesContent":["import { useState } from \"react\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { Button, FormGroup, TextField, Box } from \"@mui/material\";\nimport CancelRoundedIcon from \"@mui/icons-material/CancelRounded\";\nimport { Autocomplete } from \"@mui/material\";\n\nconst SearchField = () => {\n  const [value, setValue] = useState(null);\n\n  return (\n    <Box sx={{ mr: \"10px\" }}>\n      <FormGroup row>\n        <Autocomplete\n          value={value}\n          sx={{\n            width: \"264px\",\n            \n            \"& .MuiInputBase-input\": {\n              height: \"20px\",\n              fontSize: \"13px\",\n              fontWeight: 400,\n            },\n            \"& .MuiOutlinedInput-root\": {\n              borderTopRightRadius: \"0px\",\n              borderBottomRightRadius: \"0px\",\n            },\n          }}\n          size=\"small\"\n          onChange={(event, newValue) => {\n            if (typeof newValue === \"string\") {\n              setValue({\n                title: newValue,\n              });\n            } else if (newValue && newValue.inputValue) {\n              // Create a new value from the user input\n              setValue({\n                title: newValue.inputValue,\n              });\n            } else {\n              setValue(newValue);\n            }\n          }}\n          clearIcon={\n            <CancelRoundedIcon\n              sx={{\n                width: \"15px\",\n                height: \"15px\",\n                color: \"rgba(24, 24, 25, 0.42)\",\n                padding: \"0px\",\n              }}\n            />\n          }\n          selectOnFocus\n          clearOnBlur\n          handleHomeEndKeys\n          options={top100Films}\n          getOptionLabel={(option) => {\n            if (typeof option === \"string\") {\n              return option;\n            }\n            if (option.inputValue) {\n              return option.inputValue;\n            }\n            return option.title;\n          }}\n          renderOption={(props, option) => <li {...props}>{option.title}</li>}\n          freeSolo\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              sx={{\n                width: 264,\n              }}\n              InputProps={{\n                ...params.InputProps,\n                startAdornment: (\n                  <SearchIcon\n                    sx={{\n                      width: \"13.5px\",\n                      height: \"13.5px\",\n                      color: \"rgba(24, 24, 25, 0.42)\",\n                    }}\n                  />\n                ),\n              }}\n              placeholder=\"업체명, 연락처 등 검색\"\n              InputLabelProps={{ shrink: false }}\n            />\n          )}\n        />\n        <Button\n          sx={{\n            borderTopLeftRadius: 0,\n            borderBottomLeftRadius: 0,\n            background: \"#FAFAFA\",\n            border: \"1px solid #C4C4C4\",\n            color: \"#97979B\",\n            fontWeight: 600,\n            fontSize: \"13px\",\n            width: \"72px\",\n            height: \"37px\",\n            \"&:hover\": { backgroundColor: \"rgba(56, 85, 179, 0.08)\" },\n          }}\n          variant=\"contained\"\n          disableElevation\n        >\n          검색\n        </Button>\n      </FormGroup>\n    </Box>\n  );\n};\n\nconst top100Films = [\n  { title: \"The Shawshank Redemption\", year: 1994 },\n  { title: \"The Godfather\", year: 1972 },\n  { title: \"The Godfather: Part II\", year: 1974 },\n  { title: \"The Dark Knight\", year: 2008 },\n  { title: \"12 Angry Men\", year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n];\n\nexport default SearchField;"],"mappings":"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"},"metadata":{},"sourceType":"module"}