{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useNavigate } from \"react-router-dom\";\nimport api from 'src/utils/axios_api'; // 로그인 페이지(로그인 세션O) -> 대시보드\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RouterGuard = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  let isPost = false; // useEffect(() => {\n  //     if (isPost)\n  //         return;\n  //     isPost = true;\n  //     const user = localStorage.getItem('user');\n  //     if (!user) {\n  //         setLoading(false)\n  //         return;\n  //     }\n  //     api.post('/refresh')\n  //         .then((res) => {\n  //             // 토큰 o\n  //             if (res.status == 201) { // 엑세스만 재발행\n  //                 localStorage.removeItem('user')\n  //                 localStorage.setItem('user', JSON.stringify(res.data, ['email', 'accessToken', 'refreshToken']))\n  //             }\n  //             navigate(\"/\", { replace: true })\n  //         })\n  //         .catch((err) => {\n  //             // 토큰 x\n  //             setLoading(false)\n  //         })\n  // }, [])\n\n  if (loading) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Loading\"\n  }, void 0, false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", children, \"   \"]\n  }, void 0, true);\n};\n\n_s(RouterGuard, \"DnY8KtHWiqG98vKbBdb88BioG/Y=\", false, function () {\n  return [useNavigate];\n});\n\n_c = RouterGuard;\nRouterGuard.propTypes = {\n  children: PropTypes.node\n};\nexport default RouterGuard;\n\nvar _c;\n\n$RefreshReg$(_c, \"RouterGuard\");","map":{"version":3,"names":["React","useEffect","useState","PropTypes","useNavigate","api","RouterGuard","children","loading","setLoading","navigate","isPost","propTypes","node"],"sources":["/home/song/serp_front/src/components/RouterGuard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useNavigate } from \"react-router-dom\";\n\nimport api from 'src/utils/axios_api'\n\n// 로그인 페이지(로그인 세션O) -> 대시보드\nconst RouterGuard = ({ children }) => {\n    const [loading, setLoading] = useState(false);\n    const navigate = useNavigate();\n    let isPost = false;\n\n    // useEffect(() => {\n    //     if (isPost)\n    //         return;\n    //     isPost = true;\n\n    //     const user = localStorage.getItem('user');\n\n    //     if (!user) {\n    //         setLoading(false)\n    //         return;\n    //     }\n\n    //     api.post('/refresh')\n    //         .then((res) => {\n    //             // 토큰 o\n    //             if (res.status == 201) { // 엑세스만 재발행\n    //                 localStorage.removeItem('user')\n    //                 localStorage.setItem('user', JSON.stringify(res.data, ['email', 'accessToken', 'refreshToken']))\n    //             }\n    //             navigate(\"/\", { replace: true })\n    //         })\n    //         .catch((err) => {\n    //             // 토큰 x\n    //             setLoading(false)\n    //         })\n    // }, [])\n\n    if (loading)\n        return (<>Loading</>);\n\n    return (\n        <> {children}   </>\n    );\n};\n\nRouterGuard.propTypes = {\n    children: PropTypes.node\n};\n\nexport default RouterGuard;\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAOC,GAAP,MAAgB,qBAAhB,C,CAEA;;;;;AACA,MAAMC,WAAW,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAClC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAMQ,QAAQ,GAAGN,WAAW,EAA5B;EACA,IAAIO,MAAM,GAAG,KAAb,CAHkC,CAKlC;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAIH,OAAJ,EACI,oBAAQ;IAAA;EAAA,iBAAR;EAEJ,oBACI;IAAA,gBAAID,QAAJ;EAAA,gBADJ;AAGH,CAtCD;;GAAMD,W;UAEeF,W;;;KAFfE,W;AAwCNA,WAAW,CAACM,SAAZ,GAAwB;EACpBL,QAAQ,EAAEJ,SAAS,CAACU;AADA,CAAxB;AAIA,eAAeP,WAAf"},"metadata":{},"sourceType":"module"}