{"ast":null,"code":"import axios from'axios';import{useEffect}from'react';import{useNavigate}from\"react-router-dom\";var client=axios.create({baseURL:'http://localhost:3001',timeout:1000});// 200 : 성공, 201 : 토큰 재발행, 400 : 인증 X(여러가지 이유),\nclient.interceptors.request.use(function(config){var authorization=localStorage.getItem('Authorization');if(!authorization){config.headers[\"Authorization\"]=null;return config;}config.headers[\"Authorization\"]=authorization;return config;});// 응답\nvar Interceptor=function Interceptor(_ref){var children=_ref.children;var navigate=useNavigate();useEffect(function(){// Authorization 헤더가 비어있다면 갱신 안해도되는 거임\nclient.interceptors.response.use(function(response){if(response.headers.authorization){localStorage.setItem('Authorization',response.headers.authorization);}return response;},function(error){// 백엔드에서 jwt(검증+갱신) 후 토큰 만료(액세스+리프레쉬)\nif(error.response&&error.response.status===400)navigate(\"/login\",{replace:true});return Promise.reject(error);});},[]);return children;};export default client;export{Interceptor};","map":{"version":3,"names":["axios","useEffect","useNavigate","client","create","baseURL","timeout","interceptors","request","use","config","authorization","localStorage","getItem","headers","Interceptor","children","navigate","response","setItem","error","status","replace","Promise","reject"],"sources":["/home/song/serp_front/src/utils/axios.js"],"sourcesContent":["import axios from 'axios';\nimport { useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\n\nconst client = axios.create(\n  {\n    baseURL : 'http://localhost:3001',\n    timeout: 1000,\n  }\n);\n// 200 : 성공, 201 : 토큰 재발행, 400 : 인증 X(여러가지 이유),\nclient.interceptors.request.use(\n  function (config) {\n    const authorization = localStorage.getItem('Authorization');\n    if (!authorization) {\n      config.headers[\"Authorization\"] = null;\n      return config\n    }\n    config.headers[\"Authorization\"] = authorization;\n    return config\n  }\n)\n\n// 응답\nconst Interceptor = ({children}) => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Authorization 헤더가 비어있다면 갱신 안해도되는 거임\n    client.interceptors.response.use(\n      function (response) {\n        \n        if(response.headers.authorization) {\n          localStorage.setItem('Authorization', response.headers.authorization);\n        }\n        return response\n      },\n      function (error) {\n        // 백엔드에서 jwt(검증+갱신) 후 토큰 만료(액세스+리프레쉬)\n        if (error.response && error.response.status === 400) \n            navigate(\"/login\", { replace: true })\n        \n        return Promise.reject(error) \n      }\n    )\n  }, [])\n  return children;\n}\n\n\nexport default client;\nexport {Interceptor};"],"mappings":"AAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,KAA0B,OAA1B,CACA,OAASC,WAAT,KAA4B,kBAA5B,CAEA,GAAMC,OAAM,CAAGH,KAAK,CAACI,MAAN,CACb,CACEC,OAAO,CAAG,uBADZ,CAEEC,OAAO,CAAE,IAFX,CADa,CAAf,CAMA;AACAH,MAAM,CAACI,YAAP,CAAoBC,OAApB,CAA4BC,GAA5B,CACE,SAAUC,MAAV,CAAkB,CAChB,GAAMC,cAAa,CAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAtB,CACA,GAAI,CAACF,aAAL,CAAoB,CAClBD,MAAM,CAACI,OAAP,CAAe,eAAf,EAAkC,IAAlC,CACA,MAAOJ,OAAP,CACD,CACDA,MAAM,CAACI,OAAP,CAAe,eAAf,EAAkCH,aAAlC,CACA,MAAOD,OAAP,CACD,CATH,EAYA;AACA,GAAMK,YAAW,CAAG,QAAdA,YAAc,MAAgB,IAAdC,SAAc,MAAdA,QAAc,CAClC,GAAMC,SAAQ,CAAGf,WAAW,EAA5B,CAEAD,SAAS,CAAC,UAAM,CACd;AACAE,MAAM,CAACI,YAAP,CAAoBW,QAApB,CAA6BT,GAA7B,CACE,SAAUS,QAAV,CAAoB,CAElB,GAAGA,QAAQ,CAACJ,OAAT,CAAiBH,aAApB,CAAmC,CACjCC,YAAY,CAACO,OAAb,CAAqB,eAArB,CAAsCD,QAAQ,CAACJ,OAAT,CAAiBH,aAAvD,EACD,CACD,MAAOO,SAAP,CACD,CAPH,CAQE,SAAUE,KAAV,CAAiB,CACf;AACA,GAAIA,KAAK,CAACF,QAAN,EAAkBE,KAAK,CAACF,QAAN,CAAeG,MAAf,GAA0B,GAAhD,CACIJ,QAAQ,CAAC,QAAD,CAAW,CAAEK,OAAO,CAAE,IAAX,CAAX,CAAR,CAEJ,MAAOC,QAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP,CACD,CAdH,EAgBD,CAlBQ,CAkBN,EAlBM,CAAT,CAmBA,MAAOJ,SAAP,CACD,CAvBD,CA0BA,cAAeb,OAAf,CACA,OAAQY,WAAR"},"metadata":{},"sourceType":"module"}