{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'src/utils/axios'; // 각종페이지(로그인 세션X) 들어갈때\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginGuard = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  let isPost = false;\n  useEffect(() => {\n    if (isPost) return;\n    isPost = true;\n    axios.post('/jwt').then(res => {\n      // 토큰 o -> ... page\n      setLoading(false);\n    }).catch(e => {\n      navigate(\"/login\", {\n        replace: true\n      });\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n\n_s(LoginGuard, \"y3JVj3H+DZT4skK8GcW7cVdM7zQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginGuard;\nLoginGuard.propTypes = {\n  children: PropTypes.node\n};\nexport default LoginGuard;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginGuard\");","map":{"version":3,"names":["React","useEffect","useState","PropTypes","useNavigate","axios","LoginGuard","children","loading","setLoading","navigate","isPost","post","then","res","catch","e","replace","propTypes","node"],"sources":["/home/song/serp_front/src/components/LoginGuard.js"],"sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from 'src/utils/axios'\r\n\r\n// 각종페이지(로그인 세션X) 들어갈때\r\nconst LoginGuard = ({ children }) => {\r\n    const [loading, setLoading] = useState(true);\r\n    const navigate = useNavigate();\r\n     let isPost = false;\r\n\r\n    useEffect(() => {\r\n         if (isPost)\r\n             return;\r\n         isPost = true;\r\n        axios.post('/jwt')\r\n            .then((res) => { // 토큰 o -> ... page\r\n                setLoading(false)\r\n            })\r\n            .catch((e)=>{\r\n                navigate(\"/login\", { replace: true })\r\n            })\r\n    }, [])\r\n\r\n    if (loading)\r\n        return <></>;\r\n\r\n\r\n    return (\r\n        <>\r\n            {children}\r\n        </>\r\n    );\r\n};\r\n\r\nLoginGuard.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default LoginGuard;\r\n"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,iBAAlB,C,CAEA;;;;;AACA,MAAMC,UAAU,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACjC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAMQ,QAAQ,GAAGN,WAAW,EAA5B;EACC,IAAIO,MAAM,GAAG,KAAb;EAEDV,SAAS,CAAC,MAAM;IACX,IAAIU,MAAJ,EACI;IACJA,MAAM,GAAG,IAAT;IACDN,KAAK,CAACO,IAAN,CAAW,MAAX,EACKC,IADL,CACWC,GAAD,IAAS;MAAE;MACbL,UAAU,CAAC,KAAD,CAAV;IACH,CAHL,EAIKM,KAJL,CAIYC,CAAD,IAAK;MACRN,QAAQ,CAAC,QAAD,EAAW;QAAEO,OAAO,EAAE;MAAX,CAAX,CAAR;IACH,CANL;EAOH,CAXQ,EAWN,EAXM,CAAT;EAaA,IAAIT,OAAJ,EACI,oBAAO,qCAAP;EAGJ,oBACI;IAAA,UACKD;EADL,iBADJ;AAKH,CA3BD;;GAAMD,U;UAEeF,W;;;KAFfE,U;AA6BNA,UAAU,CAACY,SAAX,GAAuB;EACnBX,QAAQ,EAAEJ,SAAS,CAACgB;AADD,CAAvB;AAIA,eAAeb,UAAf"},"metadata":{},"sourceType":"module"}