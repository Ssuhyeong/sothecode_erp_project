{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nconst client = axios.create({\n  baseURL: 'http://127.0.0.1:3001',\n  timeout: 1000\n});\nclient.interceptors.request.use(function (config) {\n  const user = localStorage.getItem('user');\n\n  if (!user) {\n    config.headers[\"Authorization\"] = null;\n    config.headers[\"refreshToken\"] = null;\n    return config;\n  }\n\n  const {\n    accessToken,\n    refreshToken\n  } = JSON.parse(user);\n  config.headers[\"Authorization\"] = `Bearer ${accessToken}`;\n  config.headers[\"refreshToken\"] = refreshToken;\n  return config;\n});\n\nconst Interceptor = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const navigate = useNavigate();\n  useEffect(() => {\n    client.interceptors.response.use(function (response) {\n      return response;\n    }, async function (error) {\n      if (error.response && error.response.status === 401) {\n        try {\n          //  엑세스 토큰 만료\n          const originalRequest = error.config;\n          const data = await client.post('/refresh');\n\n          if (data.status == 201) {\n            // 엑세스만 재발행\n            const {\n              accessToken,\n              refreshToken\n            } = data.data.data;\n            localStorage.removeItem('user');\n            localStorage.setItem('user', JSON.stringify(data.data.data, ['accessToken', 'refreshToken']));\n            originalRequest.headers['Authorization'] = `Bearer ${accessToken}`;\n            originalRequest.headers['refreshToken'] = refreshToken;\n            return await client.request(originalRequest); // 재설정 및 원래 리퀘스트 \n          }\n        } catch (error) {\n          // [/refresh] 토큰 만료 또는 토큰 비정상 또는 헤더 없음\n          // 로그인 으로\n          localStorage.removeItem('user');\n          navigate(\"/login\", {\n            replace: true\n          });\n          return; // return Promise.reject(error)\n        }\n      } //  [/api (jwt_verify)]에서 오는 에러 코드  or 기존 요청 에러 코드\n\n\n      return Promise.reject(error);\n    });\n  }, []);\n  return children;\n};\n\n_s(Interceptor, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Interceptor;\nexport default client;\nexport { Interceptor };\n\nvar _c;\n\n$RefreshReg$(_c, \"Interceptor\");","map":{"version":3,"names":["axios","useEffect","useNavigate","client","create","baseURL","timeout","interceptors","request","use","config","user","localStorage","getItem","headers","accessToken","refreshToken","JSON","parse","Interceptor","children","navigate","response","error","status","originalRequest","data","post","removeItem","setItem","stringify","replace","Promise","reject"],"sources":["/home/song/serp_front/src/utils/axios_api.js"],"sourcesContent":["import axios from 'axios';\nimport { useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\n\nconst client = axios.create(\n  {\n    baseURL : 'http://127.0.0.1:3001',\n    timeout: 1000,\n  }\n);\n\nclient.interceptors.request.use(\n  function (config) {\n    const user = localStorage.getItem('user');\n    if (!user) {\n      config.headers[\"Authorization\"] = null;\n      config.headers[\"refreshToken\"] = null;\n      return config\n    }\n    const { accessToken, refreshToken } = JSON.parse(user)\n    config.headers[\"Authorization\"] = `Bearer ${accessToken}`;\n    config.headers[\"refreshToken\"] = refreshToken;\n    return config\n  }\n)\n\n\nconst Interceptor = ({children}) => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    client.interceptors.response.use(\n      function (response) {\n        return response\n      },\n      async function (error) {\n        if (error.response && error.response.status === 401) {\n          try {\n            //  엑세스 토큰 만료\n            const originalRequest = error.config;\n            const data = await client.post('/refresh')\n    \n            if (data.status == 201) { // 엑세스만 재발행\n              const { accessToken, refreshToken } = data.data.data\n              localStorage.removeItem('user')\n              localStorage.setItem('user', JSON.stringify(data.data.data, ['accessToken', 'refreshToken']))\n              originalRequest.headers['Authorization'] = `Bearer ${accessToken}`;\n              originalRequest.headers['refreshToken'] = refreshToken;\n              return await client.request(originalRequest); // 재설정 및 원래 리퀘스트 \n            }\n          } catch (error) {\n            // [/refresh] 토큰 만료 또는 토큰 비정상 또는 헤더 없음\n            // 로그인 으로\n            localStorage.removeItem('user');\n            \n            navigate(\"/login\", { replace: true })\n            return;\n           // return Promise.reject(error)\n          }\n        }\n        //  [/api (jwt_verify)]에서 오는 에러 코드  or 기존 요청 에러 코드\n        return Promise.reject(error) \n      }\n    )\n  }, [])\n  return children;\n}\n\n\nexport default client;\nexport {Interceptor};"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,MAAM,GAAGH,KAAK,CAACI,MAAN,CACb;EACEC,OAAO,EAAG,uBADZ;EAEEC,OAAO,EAAE;AAFX,CADa,CAAf;AAOAH,MAAM,CAACI,YAAP,CAAoBC,OAApB,CAA4BC,GAA5B,CACE,UAAUC,MAAV,EAAkB;EAChB,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;;EACA,IAAI,CAACF,IAAL,EAAW;IACTD,MAAM,CAACI,OAAP,CAAe,eAAf,IAAkC,IAAlC;IACAJ,MAAM,CAACI,OAAP,CAAe,cAAf,IAAiC,IAAjC;IACA,OAAOJ,MAAP;EACD;;EACD,MAAM;IAAEK,WAAF;IAAeC;EAAf,IAAgCC,IAAI,CAACC,KAAL,CAAWP,IAAX,CAAtC;EACAD,MAAM,CAACI,OAAP,CAAe,eAAf,IAAmC,UAASC,WAAY,EAAxD;EACAL,MAAM,CAACI,OAAP,CAAe,cAAf,IAAiCE,YAAjC;EACA,OAAON,MAAP;AACD,CAZH;;AAgBA,MAAMS,WAAW,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAACC;EAAD,CAAe;EAClC,MAAMC,QAAQ,GAAGnB,WAAW,EAA5B;EAEAD,SAAS,CAAC,MAAM;IACdE,MAAM,CAACI,YAAP,CAAoBe,QAApB,CAA6Bb,GAA7B,CACE,UAAUa,QAAV,EAAoB;MAClB,OAAOA,QAAP;IACD,CAHH,EAIE,gBAAgBC,KAAhB,EAAuB;MACrB,IAAIA,KAAK,CAACD,QAAN,IAAkBC,KAAK,CAACD,QAAN,CAAeE,MAAf,KAA0B,GAAhD,EAAqD;QACnD,IAAI;UACF;UACA,MAAMC,eAAe,GAAGF,KAAK,CAACb,MAA9B;UACA,MAAMgB,IAAI,GAAG,MAAMvB,MAAM,CAACwB,IAAP,CAAY,UAAZ,CAAnB;;UAEA,IAAID,IAAI,CAACF,MAAL,IAAe,GAAnB,EAAwB;YAAE;YACxB,MAAM;cAAET,WAAF;cAAeC;YAAf,IAAgCU,IAAI,CAACA,IAAL,CAAUA,IAAhD;YACAd,YAAY,CAACgB,UAAb,CAAwB,MAAxB;YACAhB,YAAY,CAACiB,OAAb,CAAqB,MAArB,EAA6BZ,IAAI,CAACa,SAAL,CAAeJ,IAAI,CAACA,IAAL,CAAUA,IAAzB,EAA+B,CAAC,aAAD,EAAgB,cAAhB,CAA/B,CAA7B;YACAD,eAAe,CAACX,OAAhB,CAAwB,eAAxB,IAA4C,UAASC,WAAY,EAAjE;YACAU,eAAe,CAACX,OAAhB,CAAwB,cAAxB,IAA0CE,YAA1C;YACA,OAAO,MAAMb,MAAM,CAACK,OAAP,CAAeiB,eAAf,CAAb,CANsB,CAMwB;UAC/C;QACF,CAbD,CAaE,OAAOF,KAAP,EAAc;UACd;UACA;UACAX,YAAY,CAACgB,UAAb,CAAwB,MAAxB;UAEAP,QAAQ,CAAC,QAAD,EAAW;YAAEU,OAAO,EAAE;UAAX,CAAX,CAAR;UACA,OANc,CAOf;QACA;MACF,CAxBoB,CAyBrB;;;MACA,OAAOC,OAAO,CAACC,MAAR,CAAeV,KAAf,CAAP;IACD,CA/BH;EAiCD,CAlCQ,EAkCN,EAlCM,CAAT;EAmCA,OAAOH,QAAP;AACD,CAvCD;;GAAMD,W;UACajB,W;;;KADbiB,W;AA0CN,eAAehB,MAAf;AACA,SAAQgB,WAAR"},"metadata":{},"sourceType":"module"}