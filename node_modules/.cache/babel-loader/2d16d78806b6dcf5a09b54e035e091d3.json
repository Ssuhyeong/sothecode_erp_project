{"ast":null,"code":"import api from 'src/utils/axios_api';\n\nconst Guard = () => {\n  const authUser = async () => {\n    const data = await api.post('/refresh').then(res);\n    console.log(data.status);\n\n    if (data.status == 201) {\n      // 엑세스만 재발행\n      localStorage.removeItem('user');\n      localStorage.setItem('user', JSON.stringify(data.data, ['accessToken', 'refreshToken']));\n    }\n  };\n\n  authUser();\n};\n\n_c = Guard;\nexport default Guard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Guard\");","map":{"version":3,"names":["api","Guard","authUser","data","post","then","res","console","log","status","localStorage","removeItem","setItem","JSON","stringify"],"sources":["/home/song/serp_front/src/components/Guard.js"],"sourcesContent":["import api from 'src/utils/axios_api'\r\n\r\nconst Guard = () => {\r\n\r\n    const authUser = async () => {\r\n\r\n        const data = await api.post('/refresh')\r\n        .then((res))\r\n        console.log(data.status)\r\n        if (data.status == 201) { // 엑세스만 재발행\r\n            localStorage.removeItem('user')\r\n            localStorage.setItem('user', JSON.stringify(data.data, ['accessToken', 'refreshToken']))\r\n        }\r\n\r\n    }\r\n\r\n    authUser();\r\n\r\n\r\n};\r\n\r\n\r\nexport default Guard;\r\n"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,qBAAhB;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAEhB,MAAMC,QAAQ,GAAG,YAAY;IAEzB,MAAMC,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAS,UAAT,EAClBC,IADkB,CACZC,GADY,CAAnB;IAEAC,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACM,MAAjB;;IACA,IAAIN,IAAI,CAACM,MAAL,IAAe,GAAnB,EAAwB;MAAE;MACtBC,YAAY,CAACC,UAAb,CAAwB,MAAxB;MACAD,YAAY,CAACE,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeX,IAAI,CAACA,IAApB,EAA0B,CAAC,aAAD,EAAgB,cAAhB,CAA1B,CAA7B;IACH;EAEJ,CAVD;;EAYAD,QAAQ;AAGX,CAjBD;;KAAMD,K;AAoBN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}