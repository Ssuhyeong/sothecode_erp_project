{"ast":null,"code":"var _jsxFileName = \"/home/song/serp_front/src/views/SignIn/index.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { FormHelperText, Card, Button, CssBaseline, TextField, Box, Typography, Container } from \"@mui/material\";\nimport \"./index.css\";\nimport axios from '../../utils/axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme();\n\nconst SignIn = () => {\n  _s();\n\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordState] = useState(\"\");\n  const navigate = useNavigate();\n\n  const onhandlePost = async data => {\n    await axios.post('/account/signIn', {\n      email: 'levin',\n      password: '123'\n    }).then(res => {\n      localStorage.setItem('user', JSON.stringify(res.data.data, ['accessToken', 'refreshToken'])); //   accessToken : res.data.data., refreshToken})\n\n      navigate(`/home`);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const loginData = {\n      userEmail: data.get(\"email\"),\n      userPassword: data.get(\"password\")\n    };\n    const {\n      userEmail,\n      userPassword\n    } = loginData;\n    onhandlePost(loginData); // const emailRegex =\n    //   /([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n    // if (!emailRegex.test(userEmail))\n    //   setEmailError(\"올바른 이메일 형식이 아닙니다.\");\n    // else setEmailError(\"\");\n    // const passwordRegex =\n    //   /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,25}$/;\n    // if (!passwordRegex.test(userPassword))\n    //   setPasswordState(\"숫자+영문자+특수문자 8자리\");\n    // else setPasswordState(\"\");\n    // if (emailRegex.test(userEmail) && passwordRegex.test(userPassword)) {\n    //   onhandlePost(loginData);\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"Card_style\",\n        elevation: 5,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"SOTHECODE ERP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            onSubmit: handleSubmit,\n            noValidate: true,\n            sx: {\n              mt: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              id: \"email\",\n              label: \"Email Address\",\n              name: \"email\",\n              autoComplete: \"email\",\n              autoFocus: true,\n              error: emailError !== \"\" || false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              className: \"error_message\",\n              children: emailError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              name: \"password\",\n              label: \"Password\",\n              type: \"password\",\n              id: \"password\",\n              autoComplete: \"current-password\",\n              error: passwordError !== \"\" || false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              className: \"error_message\",\n              children: passwordError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              sx: {\n                mt: 3,\n                mb: 2\n              },\n              children: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"/4ULm7XE4yH4RBFXizg4s9cbnq4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","useState","createTheme","ThemeProvider","FormHelperText","Card","Button","CssBaseline","TextField","Box","Typography","Container","axios","useNavigate","theme","SignIn","emailError","setEmailError","passwordError","setPasswordState","navigate","onhandlePost","data","post","email","password","then","res","localStorage","setItem","JSON","stringify","catch","err","console","log","handleSubmit","event","preventDefault","FormData","currentTarget","loginData","userEmail","get","userPassword","marginTop","display","flexDirection","alignItems","mt","mb"],"sources":["/home/song/serp_front/src/views/SignIn/index.js"],"sourcesContent":["import * as React from \"react\";\nimport { useState } from \"react\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { FormHelperText, Card , Button, CssBaseline, TextField, Box, Typography, Container} from \"@mui/material\";\nimport \"./index.css\";\nimport axios from '../../utils/axios';\n\nimport { useNavigate } from 'react-router-dom';\n\nconst theme = createTheme();\n\n\n\nconst SignIn = () => {\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordState] = useState(\"\");\n  const navigate = useNavigate();\n\n  const onhandlePost = async (data) => {\n    \n    await axios.post('/account/signIn', {\n      email: 'levin', \n      password: '123'\n    })\n    .then((res) => {\n       localStorage.setItem('user', JSON.stringify(res.data.data, ['accessToken', 'refreshToken']))\n      //   accessToken : res.data.data., refreshToken})\n       navigate(`/home`);\n    })\n    .catch((err)=>{\n      console.log(err)  \n    })\n\n\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const loginData = {\n      userEmail: data.get(\"email\"),\n      userPassword: data.get(\"password\"),\n    };\n    const { userEmail, userPassword } = loginData;\n    onhandlePost(loginData);\n    // const emailRegex =\n    //   /([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n    // if (!emailRegex.test(userEmail))\n    //   setEmailError(\"올바른 이메일 형식이 아닙니다.\");\n    // else setEmailError(\"\");\n\n    // const passwordRegex =\n    //   /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,25}$/;\n    // if (!passwordRegex.test(userPassword))\n    //   setPasswordState(\"숫자+영문자+특수문자 8자리\");\n    // else setPasswordState(\"\");\n\n    // if (emailRegex.test(userEmail) && passwordRegex.test(userPassword)) {\n    //   onhandlePost(loginData);\n    // }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Card className=\"Card_style\" elevation={5}>\n          <Box\n            sx={{\n              marginTop: 8,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <Typography component=\"h1\" variant=\"h5\">\n              SOTHECODE ERP \n            </Typography>\n            <Box\n              component=\"form\"\n              onSubmit={handleSubmit}\n              noValidate\n              sx={{ mt: 1 }}\n            >\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n                error={emailError !== \"\" || false}\n              />\n              <FormHelperText className=\"error_message\">\n                {emailError}\n              </FormHelperText>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                error={passwordError !== \"\" || false}\n              />\n              <FormHelperText className=\"error_message\">\n                {passwordError}\n              </FormHelperText>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Sign In\n              </Button>\n            </Box>\n          </Box>\n        </Card>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default SignIn;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}