{"ast":null,"code":"var _jsxFileName = \"/home/song/serp_front/src/components/Snackbar/SuccessSnackBar.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SuccessSnackBar = props => {\n  return /*#__PURE__*/_jsxDEV(Snackbar, {\n    anchorOrigin: {\n      vertical: \"top\",\n      horizontal: \"center\"\n    },\n    open: snackbarOpen,\n    onClose: handleClose,\n    autoHideDuration: 60000,\n    sx: {\n      width: \"100%\",\n      height: 48,\n      margin: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      variant: \"filled\",\n      sx: {\n        width: \"40%\",\n        background: \"#66BB6A\"\n      },\n      children: props.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), \"}\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SuccessSnackBar;\nexport default SuccessSnackBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SuccessSnackBar\");","map":{"version":3,"names":["SuccessSnackBar","props","vertical","horizontal","snackbarOpen","handleClose","width","height","margin","background","message"],"sources":["/home/song/serp_front/src/components/Snackbar/SuccessSnackBar.js"],"sourcesContent":["\n\nconst SuccessSnackBar = (props) => {\n    return (\n        <Snackbar\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n            open={snackbarOpen}\n            onClose={handleClose}\n            autoHideDuration={60000}\n            sx={{ width: \"100%\", height: 48, margin: \"10px\" }}\n        >\n            <Alert\n                severity=\"success\"\n                variant=\"filled\"\n                sx={{\n                    width: \"40%\",\n                    background: \"#66BB6A\",\n                }}\n            >\n                {props.message}\n            </Alert>\n\n            {/* <Alert onClose={handleClose} severity=\"error\" sx={{ width: \"100%\" }} variant=\"filled\"\n                            action={\n                                <Box>\n                                    <Button color=\"inherit\" size=\"small\" onClick={() => { handleClose(); setDelectComplet(true) }}>\n                                        삭제\n                                    </Button>\n                                    <IconButton size=\"small\" color=\"component\" onClick={handleClose}>\n                                        <CloseIcon fontSize=\"inherit\" color=\"ffffff\" />\n                                    </IconButton>\n                                </Box>\n                            }>\n                            업체는 삭제하면 복구가 불가능합니다. 삭제하시겠습니까?\n                        </Alert>) */}\n\n                }\n        </Snackbar >\n    );\n}\n\nexport default SuccessSnackBar;\n\n"],"mappings":";;;AAEA,MAAMA,eAAe,GAAIC,KAAD,IAAW;EAC/B,oBACI,QAAC,QAAD;IACI,YAAY,EAAE;MAAEC,QAAQ,EAAE,KAAZ;MAAmBC,UAAU,EAAE;IAA/B,CADlB;IAEI,IAAI,EAAEC,YAFV;IAGI,OAAO,EAAEC,WAHb;IAII,gBAAgB,EAAE,KAJtB;IAKI,EAAE,EAAE;MAAEC,KAAK,EAAE,MAAT;MAAiBC,MAAM,EAAE,EAAzB;MAA6BC,MAAM,EAAE;IAArC,CALR;IAAA,wBAOI,QAAC,KAAD;MACI,QAAQ,EAAC,SADb;MAEI,OAAO,EAAC,QAFZ;MAGI,EAAE,EAAE;QACAF,KAAK,EAAE,KADP;QAEAG,UAAU,EAAE;MAFZ,CAHR;MAAA,UAQKR,KAAK,CAACS;IARX;MAAA;MAAA;MAAA;IAAA,QAPJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAoCH,CArCD;;KAAMV,e;AAuCN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}