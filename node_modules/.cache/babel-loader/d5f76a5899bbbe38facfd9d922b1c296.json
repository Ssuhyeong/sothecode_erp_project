{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'src/utils/axios'; // 각종페이지(로그인 세션X) -> 로그인페이지\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginGuard = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [loading, setLoading] = useState(false); // const navigate = useNavigate();\n  // let isPost = false;\n\n  useEffect(() => {\n    // if (isPost)\n    //     return;\n    // isPost = true;\n    axios.post('/jwt').then(res => {\n      // 토큰 o -> ... page\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Loading\"\n  }, void 0, false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n\n_s(LoginGuard, \"bp7W7BLZaxNmS0ceaCBH82+KoGQ=\");\n\n_c = LoginGuard;\nLoginGuard.propTypes = {\n  children: PropTypes.node\n};\nexport default LoginGuard;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginGuard\");","map":{"version":3,"names":["React","useEffect","useState","PropTypes","useNavigate","axios","LoginGuard","children","loading","setLoading","post","then","res","propTypes","node"],"sources":["/home/song/serp_front/src/components/LoginGuard.js"],"sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport axios from 'src/utils/axios'\r\n\r\n// 각종페이지(로그인 세션X) -> 로그인페이지\r\nconst LoginGuard = ({ children }) => {\r\n    const [loading, setLoading] = useState(false);\r\n    // const navigate = useNavigate();\r\n    // let isPost = false;\r\n\r\n    useEffect(() => {\r\n        // if (isPost)\r\n        //     return;\r\n        // isPost = true;\r\n\r\n        axios.post('/jwt')\r\n            .then((res) => { // 토큰 o -> ... page\r\n                setLoading(false)\r\n            })\r\n    }, [])\r\n\r\n    if (loading)\r\n        return (<>Loading</>);\r\n\r\n\r\n    return (\r\n        <>\r\n            {children}\r\n        </>\r\n    );\r\n};\r\n\r\nLoginGuard.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default LoginGuard;\r\n"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAOC,KAAP,MAAkB,iBAAlB,C,CAEA;;;;;AACA,MAAMC,UAAU,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACjC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC,CADiC,CAEjC;EACA;;EAEAD,SAAS,CAAC,MAAM;IACZ;IACA;IACA;IAEAI,KAAK,CAACK,IAAN,CAAW,MAAX,EACKC,IADL,CACWC,GAAD,IAAS;MAAE;MACbH,UAAU,CAAC,KAAD,CAAV;IACH,CAHL;EAIH,CATQ,EASN,EATM,CAAT;EAWA,IAAID,OAAJ,EACI,oBAAQ;IAAA;EAAA,iBAAR;EAGJ,oBACI;IAAA,UACKD;EADL,iBADJ;AAKH,CAzBD;;GAAMD,U;;KAAAA,U;AA2BNA,UAAU,CAACO,SAAX,GAAuB;EACnBN,QAAQ,EAAEJ,SAAS,CAACW;AADD,CAAvB;AAIA,eAAeR,UAAf"},"metadata":{},"sourceType":"module"}