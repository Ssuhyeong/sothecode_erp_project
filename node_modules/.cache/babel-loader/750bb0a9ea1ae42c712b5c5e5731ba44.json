{"ast":null,"code":"var _jsxFileName = \"/home/song/serp_front/src/routes.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useRoutes } from \"react-router-dom\";\nimport LoginGuard from 'src/components/LoginGuard';\nimport RouterGuard from 'src/components/RouterGuard';\nimport DashboardLayout from 'src/layouts/DashboardLayout';\nimport MenuView from 'src/views/errors/NotFoundView';\nimport CompanyInfoView from 'src/views/menu/CompanyInfoView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  let routes = [{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 33\n      }, this)\n    }, {\n      path: \"/courses\",\n      element: /*#__PURE__*/_jsxDEV(Courses, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 20\n      }, this),\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(CoursesIndex, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 37\n        }, this)\n      }, {\n        path: \"/courses/:id\",\n        element: /*#__PURE__*/_jsxDEV(Course, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 46\n        }, this)\n      }]\n    }, {\n      path: \"*\",\n      element: /*#__PURE__*/_jsxDEV(NoMatch, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 31\n      }, this)\n    }]\n  }]; // The useRoutes() hook allows you to define your routes as JavaScript objects\n  // instead of <Routes> and <Route> elements. This is really just a style\n  // preference for those who prefer to not use JSX for their routes config.\n\n  let element = useRoutes(routes);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Route Objects Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"This example demonstrates how to use React Router's \\\"route object\\\" API instead of the JSX API to configure your routes. Both APIs are first-class. In fact, React Router actually uses the object-based API internally by creating route objects from your\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"<Route>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), \"elements.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"React Router exposes a \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"useRoutes()\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 32\n      }, this), \" hook that allows you to hook into the same matching algorithm that \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"<Routes>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 52\n      }, this), \" \", \"uses internally to decide which \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"<Route>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 41\n      }, this), \" to render. When you use this hook, you get back an element that will render your entire route hierarchy.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), element]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n} // const routes  = () => {\n//   const element = useRoutes([\n//     {\n//       path: \"/\",\n//       element: <MenuView />,\n//     }\n//   ]);\n//   return ( {element });\n// }\n// export default routes;\n// <React.Suspense fallback={<div>Loading...</div>}>\n//   <Routes>\n//     {\n//       routes.map((route, i) => {\n//         const RouteElement = route.element;\n//         const RouteLayout = route.layout || React.Fragment\n//         const RouteGuard = route.guard || React.Fragment;\n//         return (\n//           <Route key={i} path={route.path}\n//             element={\n//               <RouteGuard>\n//                 <RouteLayout>\n//                   <RouteElement />\n//                 </RouteLayout>\n//               </RouteGuard>\n//             }>\n//           </Route>\n//         )\n//       })\n//     }\n//   </Routes>\n// </React.Suspense>\n// export const routes = [\n//   {\n//     path: '/404',\n//     guard: RouterGuard,\n//     element: React.lazy(() => import('src/views/errors/NotFoundView')),\n//   },\n//   {\n//     path: '/login',\n//     guard: RouterGuard,\n//     element: React.lazy(() => import('src/views/signIn')),\n//   },\n//   // customize  routes\n//   {\n//     path: '/memu/*',\n//     guard: LoginGuard,\n//     layout: DashboardLayout,\n//     element: React.lazy(() => import('src/views/menu')),\n//     childs: [\n//       {\n//         path: '/CompanyInfo',\n//         element: React.lazy(() => import('src/views/menu/CompanyInfoView')),\n//       },\n//     ]\n//   },\n//   // define [redirect(=Navigate )]\n//   {\n//     path: \"/\",\n//     element: () => <Navigate replace to=\"/memu\" />\n//   },\n//   {\n//     path: \"/*\",\n//     element: () => <Navigate replace to=\"/404\" />\n//   }\n// ];\n\n_s(App, \"etFarxWlkZhRrhKgVVEzJqrjurQ=\", false, function () {\n  return [useRoutes];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRoutes","LoginGuard","RouterGuard","DashboardLayout","MenuView","CompanyInfoView","App","routes","path","element","children","index"],"sources":["/home/song/serp_front/src/routes.js"],"sourcesContent":["import React from 'react';\nimport { useRoutes } from \"react-router-dom\";\n\n\nimport LoginGuard from 'src/components/LoginGuard';\nimport RouterGuard from 'src/components/RouterGuard';\nimport DashboardLayout from 'src/layouts/DashboardLayout';\n\nimport MenuView from 'src/views/errors/NotFoundView';\nimport CompanyInfoView from 'src/views/menu/CompanyInfoView';\n\n\nexport default function App() {\n  let routes: RouteObject[] = [\n    {\n      path: \"/\",\n      element: <Layout />,\n      children: [\n        { index: true, element: <Home /> },\n        {\n          path: \"/courses\",\n          element: <Courses />,\n          children: [\n            { index: true, element: <CoursesIndex /> },\n            { path: \"/courses/:id\", element: <Course /> },\n          ],\n        },\n        { path: \"*\", element: <NoMatch /> },\n      ],\n    },\n  ];\n\n  // The useRoutes() hook allows you to define your routes as JavaScript objects\n  // instead of <Routes> and <Route> elements. This is really just a style\n  // preference for those who prefer to not use JSX for their routes config.\n  let element = useRoutes(routes);\n\n  return (\n    <div>\n      <h1>Route Objects Example</h1>\n\n      <p>\n        This example demonstrates how to use React Router's \"route object\" API\n        instead of the JSX API to configure your routes. Both APIs are\n        first-class. In fact, React Router actually uses the object-based API\n        internally by creating route objects from your{\" \"}\n        <code>&lt;Route&gt;</code>\n        elements.\n      </p>\n\n      <p>\n        React Router exposes a <code>useRoutes()</code> hook that allows you to\n        hook into the same matching algorithm that <code>&lt;Routes&gt;</code>{\" \"}\n        uses internally to decide which <code>&lt;Route&gt;</code> to render.\n        When you use this hook, you get back an element that will render your\n        entire route hierarchy.\n      </p>\n\n      {element}\n    </div>\n  );\n}\n\n\n// const routes  = () => {\n//   const element = useRoutes([\n//     {\n//       path: \"/\",\n//       element: <MenuView />,\n//     }\n//   ]);\n\n//   return ( {element });\n// }\n// export default routes;\n\n\n\n  // <React.Suspense fallback={<div>Loading...</div>}>\n  //   <Routes>\n  //     {\n  //       routes.map((route, i) => {\n  //         const RouteElement = route.element;\n  //         const RouteLayout = route.layout || React.Fragment\n  //         const RouteGuard = route.guard || React.Fragment;\n\n  //         return (\n  //           <Route key={i} path={route.path}\n  //             element={\n  //               <RouteGuard>\n  //                 <RouteLayout>\n  //                   <RouteElement />\n  //                 </RouteLayout>\n  //               </RouteGuard>\n  //             }>\n  //           </Route>\n  //         )\n  //       })\n  //     }\n  //   </Routes>\n  // </React.Suspense>\n\n\n\n// export const routes = [\n\n//   {\n//     path: '/404',\n//     guard: RouterGuard,\n//     element: React.lazy(() => import('src/views/errors/NotFoundView')),\n//   },\n//   {\n//     path: '/login',\n//     guard: RouterGuard,\n//     element: React.lazy(() => import('src/views/signIn')),\n//   },\n//   // customize  routes\n//   {\n//     path: '/memu/*',\n//     guard: LoginGuard,\n//     layout: DashboardLayout,\n//     element: React.lazy(() => import('src/views/menu')),\n    \n//     childs: [\n//       {\n//         path: '/CompanyInfo',\n//         element: React.lazy(() => import('src/views/menu/CompanyInfoView')),\n//       },\n//     ]\n//   },\n\n\n\n//   // define [redirect(=Navigate )]\n//   {\n//     path: \"/\",\n//     element: () => <Navigate replace to=\"/memu\" />\n//   },\n//   {\n//     path: \"/*\",\n//     element: () => <Navigate replace to=\"/404\" />\n//   }\n// ];"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAGA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AAEA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;;AAGA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAC5B,IAAIC,MAAqB,GAAG,CAC1B;IACEC,IAAI,EAAE,GADR;IAEEC,OAAO,eAAE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAFX;IAGEC,QAAQ,EAAE,CACR;MAAEC,KAAK,EAAE,IAAT;MAAeF,OAAO,eAAE,QAAC,IAAD;QAAA;QAAA;QAAA;MAAA;IAAxB,CADQ,EAER;MACED,IAAI,EAAE,UADR;MAEEC,OAAO,eAAE,QAAC,OAAD;QAAA;QAAA;QAAA;MAAA,QAFX;MAGEC,QAAQ,EAAE,CACR;QAAEC,KAAK,EAAE,IAAT;QAAeF,OAAO,eAAE,QAAC,YAAD;UAAA;UAAA;UAAA;QAAA;MAAxB,CADQ,EAER;QAAED,IAAI,EAAE,cAAR;QAAwBC,OAAO,eAAE,QAAC,MAAD;UAAA;UAAA;UAAA;QAAA;MAAjC,CAFQ;IAHZ,CAFQ,EAUR;MAAED,IAAI,EAAE,GAAR;MAAaC,OAAO,eAAE,QAAC,OAAD;QAAA;QAAA;QAAA;MAAA;IAAtB,CAVQ;EAHZ,CAD0B,CAA5B,CAD4B,CAoB5B;EACA;EACA;;EACA,IAAIA,OAAO,GAAGT,SAAS,CAACO,MAAD,CAAvB;EAEA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAGE;MAAA,2QAIiD,GAJjD,eAKE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAYE;MAAA,mDACyB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADzB,uFAE6C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAF7C,EAEyE,GAFzE,mDAGkC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHlC;IAAA;MAAA;MAAA;MAAA;IAAA,QAZF,EAoBGE,OApBH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIE;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIF;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAlIwBH,G;UAuBRN,S;;;KAvBQM,G"},"metadata":{},"sourceType":"module"}