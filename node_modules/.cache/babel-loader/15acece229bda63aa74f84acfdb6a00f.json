{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nconst client = axios.create({\n  baseURL: 'http://127.0.0.1:3001',\n  timeout: 1000\n});\nclient.interceptors.request.use(function (config) {\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n}); // 200 : 성공, 201 : 토큰 재발행, 400 : 인증 X(여러가지 이유),\n// 응답\n\nconst Interceptor = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const navigate = useNavigate();\n  useEffect(() => {\n    client.interceptors.response.use(function (response) {\n      // 백엔드에서 jwt(검증+갱신) 후 [200 : 정상], \n      if (axios.defaults.headers.common['Authorization'] !== response.headers.authorization) axios.defaults.headers.common['Authorization'] = response.headers.authorization;\n      return response;\n    }, function (error) {\n      // 백엔드에서 jwt(검증+갱신) 후 토큰 만료(액세스+리프레쉬)\n      if (error.response && error.response.status === 400) navigate(\"/login\", {\n        replace: true\n      });\n      return Promise.reject(error);\n    });\n  }, []);\n  return children;\n};\n\n_s(Interceptor, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Interceptor;\nexport default client;\nexport { Interceptor };\n\nvar _c;\n\n$RefreshReg$(_c, \"Interceptor\");","map":{"version":3,"names":["axios","useEffect","useNavigate","client","create","baseURL","timeout","interceptors","request","use","config","error","Promise","reject","Interceptor","children","navigate","response","defaults","headers","common","authorization","status","replace"],"sources":["/home/song/serp_front/src/utils/axios.js"],"sourcesContent":["import axios from 'axios';\nimport { useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\n\nconst client = axios.create(\n  {\n    baseURL : 'http://127.0.0.1:3001',\n    timeout: 1000,\n  }\n);\nclient.interceptors.request.use(\n  function (config) {\n    \n  return config;\n}, function (error) {\n\n  return Promise.reject(error);\n});\n\n// 200 : 성공, 201 : 토큰 재발행, 400 : 인증 X(여러가지 이유),\n\n// 응답\nconst Interceptor = ({children}) => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    client.interceptors.response.use(\n      function (response) {\n        // 백엔드에서 jwt(검증+갱신) 후 [200 : 정상], \n        if(axios.defaults.headers.common['Authorization'] !== response.headers.authorization)\n          axios.defaults.headers.common['Authorization'] = response.headers.authorization;\n        return response\n      },\n      function (error) {\n        // 백엔드에서 jwt(검증+갱신) 후 토큰 만료(액세스+리프레쉬)\n        if (error.response && error.response.status === 400) \n            navigate(\"/login\", { replace: true })\n        \n        return Promise.reject(error) \n      }\n    )\n  }, [])\n  return children;\n}\n\n\nexport default client;\nexport {Interceptor};"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,MAAM,GAAGH,KAAK,CAACI,MAAN,CACb;EACEC,OAAO,EAAG,uBADZ;EAEEC,OAAO,EAAE;AAFX,CADa,CAAf;AAMAH,MAAM,CAACI,YAAP,CAAoBC,OAApB,CAA4BC,GAA5B,CACE,UAAUC,MAAV,EAAkB;EAElB,OAAOA,MAAP;AACD,CAJD,EAIG,UAAUC,KAAV,EAAiB;EAElB,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAPD,E,CASA;AAEA;;AACA,MAAMG,WAAW,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAACC;EAAD,CAAe;EAClC,MAAMC,QAAQ,GAAGd,WAAW,EAA5B;EAEAD,SAAS,CAAC,MAAM;IACdE,MAAM,CAACI,YAAP,CAAoBU,QAApB,CAA6BR,GAA7B,CACE,UAAUQ,QAAV,EAAoB;MAClB;MACA,IAAGjB,KAAK,CAACkB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,MAAmDH,QAAQ,CAACE,OAAT,CAAiBE,aAAvE,EACErB,KAAK,CAACkB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDH,QAAQ,CAACE,OAAT,CAAiBE,aAAlE;MACF,OAAOJ,QAAP;IACD,CANH,EAOE,UAAUN,KAAV,EAAiB;MACf;MACA,IAAIA,KAAK,CAACM,QAAN,IAAkBN,KAAK,CAACM,QAAN,CAAeK,MAAf,KAA0B,GAAhD,EACIN,QAAQ,CAAC,QAAD,EAAW;QAAEO,OAAO,EAAE;MAAX,CAAX,CAAR;MAEJ,OAAOX,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;IACD,CAbH;EAeD,CAhBQ,EAgBN,EAhBM,CAAT;EAiBA,OAAOI,QAAP;AACD,CArBD;;GAAMD,W;UACaZ,W;;;KADbY,W;AAwBN,eAAeX,MAAf;AACA,SAAQW,WAAR"},"metadata":{},"sourceType":"module"}