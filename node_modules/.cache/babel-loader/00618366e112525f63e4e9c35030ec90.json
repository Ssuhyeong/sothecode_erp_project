{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'src/utils/axios'; // 로그인 페이지(로그인 세션O) -> 대시보드\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RouterGuard = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    axios.post('/jwt').then(res => {\n      navigate(\"/\", {\n        replace: true\n      });\n    });\n    api.post('/refresh').then(res => {\n      navigate(\"/\", {\n        replace: true\n      });\n    }).catch(err => {\n      // 토큰 x\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Loading\"\n  }, void 0, false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", children, \"   \"]\n  }, void 0, true);\n};\n\n_s(RouterGuard, \"kaxqIA0rdjCr6LhpYj9OHiZjbD4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = RouterGuard;\nRouterGuard.propTypes = {\n  children: PropTypes.node\n};\nexport default RouterGuard;\n\nvar _c;\n\n$RefreshReg$(_c, \"RouterGuard\");","map":{"version":3,"names":["React","useEffect","useState","PropTypes","useNavigate","axios","RouterGuard","children","loading","setLoading","navigate","post","then","res","replace","api","catch","err","propTypes","node"],"sources":["/home/song/serp_front/src/components/RouterGuard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useNavigate } from \"react-router-dom\";\n\nimport axios from 'src/utils/axios'\n\n// 로그인 페이지(로그인 세션O) -> 대시보드\nconst RouterGuard = ({ children }) => {\n    const [loading, setLoading] = useState(false);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        axios.post('/jwt')\n            .then((res) => {\n                navigate(\"/\", { replace: true })\n        })\n        \n        api.post('/refresh')\n            .then((res) => {\n                navigate(\"/\", { replace: true })\n            })\n            .catch((err) => {\n                // 토큰 x\n                setLoading(false)\n            })\n    }, [])\n\n    if (loading)\n        return (<>Loading</>);\n\n    return (\n        <> {children}   </>\n    );\n};\n\nRouterGuard.propTypes = {\n    children: PropTypes.node\n};\n\nexport default RouterGuard;\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAOC,KAAP,MAAkB,iBAAlB,C,CAEA;;;;;AACA,MAAMC,WAAW,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAClC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAMQ,QAAQ,GAAGN,WAAW,EAA5B;EAEAH,SAAS,CAAC,MAAM;IACZI,KAAK,CAACM,IAAN,CAAW,MAAX,EACKC,IADL,CACWC,GAAD,IAAS;MACXH,QAAQ,CAAC,GAAD,EAAM;QAAEI,OAAO,EAAE;MAAX,CAAN,CAAR;IACP,CAHD;IAKAC,GAAG,CAACJ,IAAJ,CAAS,UAAT,EACKC,IADL,CACWC,GAAD,IAAS;MACXH,QAAQ,CAAC,GAAD,EAAM;QAAEI,OAAO,EAAE;MAAX,CAAN,CAAR;IACH,CAHL,EAIKE,KAJL,CAIYC,GAAD,IAAS;MACZ;MACAR,UAAU,CAAC,KAAD,CAAV;IACH,CAPL;EAQH,CAdQ,EAcN,EAdM,CAAT;EAgBA,IAAID,OAAJ,EACI,oBAAQ;IAAA;EAAA,iBAAR;EAEJ,oBACI;IAAA,gBAAID,QAAJ;EAAA,gBADJ;AAGH,CA1BD;;GAAMD,W;UAEeF,W;;;KAFfE,W;AA4BNA,WAAW,CAACY,SAAZ,GAAwB;EACpBX,QAAQ,EAAEJ,SAAS,CAACgB;AADA,CAAxB;AAIA,eAAeb,WAAf"},"metadata":{},"sourceType":"module"}